# System
replicaCount: 1
strategyType: RollingUpdate
revisionHistoryLimit: 2

nameOverride: ""
fullnameOverride: ""

images:
  owrrm:
    repository: tip-tip-wlan-cloud-ucentral.jfrog.io/owrrm
    tag: main
    pullPolicy: Always
#    regcred:
#      registry: tip-tip-wlan-cloud-ucentral.jfrog.io
#      username: username
#      password: password
  dockerize:
    repository: tip-tip-wlan-cloud-ucentral.jfrog.io/dockerize
    tag: 0.16.0
    pullPolicy: IfNotPresent

services:
  owrrm:
    type: ClusterIP
    ports:
      restapi:
        servicePort: 16789
        targetPort: 16789
        protocol: TCP
      restapiinternal:
        servicePort: 17007
        targetPort: 17007
        protocol: TCP

checks:
  owrrm:
    liveness:
      httpGet:
        path: /
        port: 16789
    readiness:
      httpGet:
        path: /
        port: 16789

ingresses:
  http:
    enabled: false
    annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    hosts:
    - chart-example.local
    paths:
    - path: /
      serviceName: owrrm
      servicePort: restapi

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # requests:
  #  cpu: 100m
  #  memory: 128Mi
  # limits:
  #  cpu: 100m
  #  memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}

podAnnotations: {}

# Application
public_env_variables:
  UCENTRALCONFIG_UCENTRALSECHOST: owsec.wlan.local
  UCENTRALCONFIG_UCENTRALSECPORT: "17001"
  UCENTRALCONFIG_PRIVATEENDPOINT: http://owrrm-owrrm:17007
  UCENTRALSOCKETPARAMS_CONNECTTIMEOUTMS: "2000"
  UCENTRALSOCKETPARAMS_SOCKETTIMEOUTMS: "15000"
  UCENTRALSOCKETPARAMS_WIFISCANTIMEOUTMS: "45000"
  KAFKACONFIG_BOOTSTRAPSERVER: kafka:9092
  KAFKACONFIG_STATETOPIC: state
  KAFKACONFIG_WIFISCANTOPIC: wifiscan
  KAFKACONFIG_SERVICEEVENTSTOPIC: service_events
  KAFKACONFIG_GROUPID: rrm-service
  KAFKACONFIG_AUTOOFFSETRESET: latest
  DATABASECONFIG_SERVER: owrrm-mysql:3306
  DATABASECONFIG_DBNAME: owrrm
  DATABASECONFIG_DATARETENTIONINTERVALDAYS: "14"
  DATACOLLECTORPARAMS_UPDATEINTERVALMS: "5000"
  DATACOLLECTORPARAMS_DEVICESTATSINTERVALSEC: "60"
  DATACOLLECTORPARAMS_WIFISCANINTERVALSEC: "60"
  DATACOLLECTORPARAMS_CAPABILITIESINTERVALSEC: "3600"
  DATACOLLECTORPARAMS_EXECUTORTHREADCOUNT: "3"
  CONFIGMANAGERPARAMS_UPDATEINTERVALMS: "60000"
  CONFIGMANAGERPARAMS_CONFIGENABLED: "true"
  CONFIGMANAGERPARAMS_CONFIGDEBOUNCEINTERVALSEC: "30"
  MODELERPARAMS_WIFISCANBUFFERSIZE: "10"
  APISERVERPARAMS_HTTPPORT: "16789"
  APISERVERPARAMS_USEBASICAUTH: "false"

secret_env_variables:
  DATABASECONFIG_USER: root
  DATABASECONFIG_PASSWORD: openwifi
  APISERVERPARAMS_BASICAUTHUSER: admin
  APISERVERPARAMS_BASICAUTHPASSWORD: openwifi

volumes:
  owrrm: []

# MySQL (https://github.com/bitnami/charts/tree/master/bitnami/mysql)
mysql:
  enabled: false

  fullnameOverride: "owrrm-mysql"

  image:
    registry: docker.io
    repository: bitnami/mysql
    tag: 8.0.26-debian-10-r10

  auth:
    rootPassword: openwifi
    database: owrrm

  primary:
    persistence:
      enabled: true
      storageClass: ""
      size: 8Gi
